using AutoMapper;
using BookStoreApp.API.Data;
using BookStoreApp.API.Models.Author;
using BookStoreApp.API.Models.Book;
using BookStoreApp.API.Models.User;

namespace BookStoreApp.API.Configurations;

public class MapperConfig : Profile //cip...19
{
    public MapperConfig()
    {
        CreateMap<AuthorCreateDto, Author>().ReverseMap();
                                                           //copilot: .ForMember(dest => dest.Id, opt => opt.Ignore()); // Ignore Id as it will be generated by the database  
        CreateMap<AuthorUpdateDto, Author>().ReverseMap();
        CreateMap<AuthorDetailsDto, Author>().ReverseMap(); //cip...47
        CreateMap<AuthorReadOnlyDto, Author>().ReverseMap();

        CreateMap<BookCreateDto, Book>().ReverseMap();
        CreateMap<BookUpdateDto, Book>().ReverseMap();
        CreateMap<Book, BookReadOnlyDto>()
            .ForMember(dest => dest.AuthorName, opt => opt.MapFrom(src => $"{src.Author.FirstName} {src.Author.LastName}")) // Maps Author's full name to AuthorName
            .ReverseMap();
        CreateMap<Book, BookDetailsDto>()
            .ForMember(dest => dest.AuthorName, opt => opt.MapFrom(src => $"{src.Author.FirstName} {src.Author.LastName}")) // Maps Author's Full name to AuthorName
            .ReverseMap();
        CreateMap<ApiUser, UserDto>().ReverseMap();
    }
}
