@*cip...46*@
@page "/authors/update/{id:int}"
@inject IAuthorService authorService;
@inject IMapper mapper;
@inject NavigationManager navManager;
@*cip...49. vsc won't let me add to below line *@
@attribute [Authorize(Roles = Roles.Administrator)]

<h3>Edit Author</h3>

@if (!response.Success)
{
    <div class="alert alert-danger">
        @* copilot
        <span class="oi oi-warning" aria-hidden="true"></span>
        @response.Message
        *@
        <h4>@response.Message</h4>
    </div>
}

<EditForm Model="newAuthor" OnValidSubmit="HandleUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="firstName" class="form-label">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="newAuthor.FirstName" />
        <ValidationMessage For="@(() => newAuthor.FirstName)" />
    </div>
    <div class="mb-3">
        <label for="lastName" class="form-label">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="newAuthor.LastName" />
        <ValidationMessage For="@(() => newAuthor.LastName)" />
    </div>
    <div class="mb-3">
        <label for="bio" class="form-label">Bio</label>
        <InputText id="bio" class="form-control" @bind-Value="newAuthor.Bio" />
        <ValidationMessage For="@(() => newAuthor.Bio)" />
    </div>
    <button type="submit" class="btn btn-primary">
        <span class="oi oi-check" aria-hidden="true"></span>
        Save
    </button>
    <button type="button" class="btn btn-secondary" @onclick="NavigateToAuthors">
        <span class="oi oi-x" aria-hidden="true"></span>
        Cancel
    </button>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    private AuthorUpdateDto newAuthor = new();
    private Response<int> response = new() { Success = true };

    protected override async Task OnInitializedAsync()
    {
        var oldAuthor = await authorService.GetAsync(id);
        if (oldAuthor.Success && oldAuthor.Data != null)
        {
            @* newAuthor = new AuthorUpdateDto
            {
                Id = oldAuthor.Data.Id,
                FirstName = oldAuthor.Data.FirstName,
                LastName = oldAuthor.Data.LastName,
                Bio = oldAuthor.Data.Bio
            }; *@
            newAuthor = mapper.Map<AuthorUpdateDto>(oldAuthor.Data);
        }
        else
        {
            response = new Response<int>
            {
                Success = false,
                Message = oldAuthor.Message
            };
        }
    }

    private async Task HandleUpdate()
    {
        response = await authorService.EditAsync(id, newAuthor);
        if (response.Success)
        {
            NavigateToAuthors();
        }
        else
        {
            // Handle the error (e.g., show an error message)
        }
    }

    private void NavigateToAuthors()
    {
        navManager.NavigateTo("/authors");
    }
}
